<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--在此配置数据表连接信息-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"-->
    <!--p:url="1"-->
    <!--p:username="1"-->
    <!--p:password="1"-->
    <!--p:maxActive="1"-->
    <!--p:initialSize="1"-->
    <!--p:minIdle="1">-->
    <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
    <!--<property name="maxWait" value="500"/>-->

    <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
    <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->

    <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
    <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->

    <!--<property name="validationQuery" value="SELECT 'x'"/>-->
    <!--<property name="validationQueryTimeout" value="1"/>-->
    <!--<property name="testWhileIdle" value="true"/>-->
    <!--<property name="testOnBorrow" value="false"/>-->
    <!--<property name="testOnReturn" value="false"/>-->
    <!--&lt;!&ndash; 定期将监控数据输出到日志中 &ndash;&gt;-->
    <!--<property name="timeBetweenLogStatsMillis" value="300000"/>-->

    <!--&lt;!&ndash; 当程序存在缺陷时，申请的连接忘记关闭，这时候，就存在连接泄漏了。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接。 &ndash;&gt;-->
    <!--<property name="removeAbandoned" value="true"/> &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
    <!--<property name="removeAbandonedTimeout" value="3900"/> &lt;!&ndash; 900秒，也就是15分钟 &ndash;&gt;-->
    <!--<property name="logAbandoned" value="true"/> &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->

    <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小。如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 &ndash;&gt;-->
    <!--<property name="poolPreparedStatements" value="false"/>-->
    <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->
    <!--<property name="filters" value="stat,log4j"/>-->
    <!--</bean>-->
</beans>